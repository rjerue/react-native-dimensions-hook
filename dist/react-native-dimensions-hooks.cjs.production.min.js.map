{"version":3,"file":"react-native-dimensions-hooks.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Dimensions } from 'react-native';\n\nfunction useDimensionsHelper(dim: 'window' | 'screen') {\n  const [dims, setDims] = React.useState(Dimensions.get(dim));\n\n  type HandleDimChange = Parameters<Dimensions['addEventListener']>[1];\n\n  const handleDimChange: HandleDimChange = React.useCallback(\n    dimensions => {\n      setDims(dimensions[dim]);\n    },\n    [dim]\n  );\n\n  React.useEffect(() => {\n    Dimensions.addEventListener('change', handleDimChange);\n    return () => {\n      Dimensions.removeEventListener('change', handleDimChange);\n    };\n  }, [handleDimChange]);\n  return dims;\n}\n\nexport function useWindowDimensions() {\n  return useDimensionsHelper('window');\n}\n\nexport function useScreenDimension() {\n  return useDimensionsHelper('screen');\n}\n\nexport default function useDimensions() {\n  return {\n    window: useWindowDimensions(),\n    screen: useScreenDimension(),\n  };\n}\n"],"names":["useDimensionsHelper","dim","React","useState","Dimensions","get","dims","setDims","handleDimChange","useCallback","dimensions","useEffect","addEventListener","removeEventListener","useWindowDimensions","useScreenDimension","window","screen"],"mappings":"0KAGA,SAASA,EAAoBC,SACHC,EAAMC,SAASC,aAAWC,IAAIJ,IAA/CK,OAAMC,OAIPC,EAAmCN,EAAMO,aAC7C,SAAAC,GACEH,EAAQG,EAAWT,MAErB,CAACA,WAGHC,EAAMS,WAAU,kBACdP,aAAWQ,iBAAiB,SAAUJ,GAC/B,WACLJ,aAAWS,oBAAoB,SAAUL,MAE1C,CAACA,IACGF,WAGOQ,WACPd,EAAoB,mBAGbe,WACPf,EAAoB,2CAIpB,CACLgB,OAAQF,IACRG,OAAQF"}