{"version":3,"file":"react-native-dimensions-hooks.esm.js","sources":["../src/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Dimensions } from 'react-native';\n\nfunction useDimensionsHelper(dim: 'window' | 'screen') {\n  const [dims, setDims] = React.useState(Dimensions.get(dim));\n\n  type HandleDimChange = Parameters<Dimensions['addEventListener']>[1];\n\n  const handleDimChange: HandleDimChange = React.useCallback(\n    dimensions => {\n      setDims(dimensions[dim]);\n    },\n    [dim]\n  );\n\n  React.useEffect(() => {\n    Dimensions.addEventListener('change', handleDimChange);\n    return () => {\n      Dimensions.removeEventListener('change', handleDimChange);\n    };\n  }, [handleDimChange]);\n  return dims;\n}\n\nexport function useWindowDimensions() {\n  return useDimensionsHelper('window');\n}\n\nexport function useScreenDimension() {\n  return useDimensionsHelper('screen');\n}\n\nexport default function useDimensions() {\n  return {\n    window: useWindowDimensions(),\n    screen: useScreenDimension(),\n  };\n}\n"],"names":["useDimensionsHelper","dim","React","useState","Dimensions","get","dims","setDims","handleDimChange","useCallback","dimensions","useEffect","addEventListener","removeEventListener","useWindowDimensions","useScreenDimension","useDimensions","window","screen"],"mappings":";;;AAGA,SAASA,mBAAT,CAA6BC,GAA7B;wBAC0BC,KAAK,CAACC,QAAN,CAAeC,UAAU,CAACC,GAAX,CAAeJ,GAAf,CAAf;MAAjBK;MAAMC;;AAIb,MAAMC,eAAe,GAAoBN,KAAK,CAACO,WAAN,CACvC,UAAAC,UAAU;AACRH,IAAAA,OAAO,CAACG,UAAU,CAACT,GAAD,CAAX,CAAP;AACD,GAHsC,EAIvC,CAACA,GAAD,CAJuC,CAAzC;AAOAC,EAAAA,KAAK,CAACS,SAAN,CAAgB;AACdP,IAAAA,UAAU,CAACQ,gBAAX,CAA4B,QAA5B,EAAsCJ,eAAtC;AACA,WAAO;AACLJ,MAAAA,UAAU,CAACS,mBAAX,CAA+B,QAA/B,EAAyCL,eAAzC;AACD,KAFD;AAGD,GALD,EAKG,CAACA,eAAD,CALH;AAMA,SAAOF,IAAP;AACD;;SAEeQ;AACd,SAAOd,mBAAmB,CAAC,QAAD,CAA1B;AACD;SAEee;AACd,SAAOf,mBAAmB,CAAC,QAAD,CAA1B;AACD;SAEuBgB;AACtB,SAAO;AACLC,IAAAA,MAAM,EAAEH,mBAAmB,EADtB;AAELI,IAAAA,MAAM,EAAEH,kBAAkB;AAFrB,GAAP;AAID;;;;;"}